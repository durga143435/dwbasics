<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="usingreduceFlow" doc:id="0ae24da0-b4c3-440f-8610-14e56e61e26b" >
		<http:listener doc:name="Listener" doc:id="ade46f97-29ba-4006-803a-3ff58dab8b3d" config-ref="HTTP_Listener_config" path="/usingreduce"/>
		<ee:transform doc:name="Transform Message" doc:id="a492290b-0f15-41fb-835e-e9fc803178c0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw

var num = 1 to 5

var arr1 = [1,2,3,4]

var arr2 = [9,8,7,6]

var x = 11

var nestedArry =[[1],[3,4], ["hello"]]

var objArrry =[
		{one:1},
		{two: 2, three:3}
]

var stringArry = ["one", "two", "three"]
---

// reduce(num, (element,acc) -> acc ++ element)

//reduce(objArrry, (element, acc)-> element ++ acc)

/* {
(objArrry)

} */

nestedArry reduce (ele, acc)-> acc ++ ele]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
